name: cd-main-build
on:
  push:
    branches:
      # - dev
      # - qa
      - prod
      - feature/*
    # tags:
    #   - "v*.*.*"

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      docker_sha_tag: ${{ env.DOCKER_SHA_TAG }}
      code_env_name: ${{ env.CODE_ENV_NAME }}
    steps:
      - name: Set DOCKER_SHA_TAG env
        run: |
          echo "DOCKER_SHA_TAG=sha-$(echo ${{ github.sha }} | cut -c1-7)" >>  $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%d_%H-%M-%S_UTC')" >>  $GITHUB_ENV

      - name: Set CODE_ENV_NAME (prod/qa/dev)
        if: (startsWith(github.ref, 'refs/tags/v') == false) && (startsWith(github.ref, 'refs/heads/feature') == false)
        shell: bash
        run: echo "CODE_ENV_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Set CODE_ENV_NAME (tag => prod)
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: echo "CODE_ENV_NAME=prod" >> $GITHUB_ENV

      - name: Set CODE_ENV_NAME (feature)
        if: startsWith(github.ref, 'refs/heads/feature')
        shell: bash
        run: echo "CODE_ENV_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Check out code
        id: checkout_code
        uses: actions/checkout@v2.3.4
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1.1.1
      - name: Login to GitHub
        uses: docker/login-action@v1.8.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GITHUBPKG_USERNAME }}
          password: ${{ secrets.GITHUBPKG_TOKEN }}
      - name: Docker GitHub meta main_dev
        id: docker_meta_main_dev
        uses: crazy-max/ghaction-docker-meta@v1.11.0
        with:
          images: ghcr.io/${{ github.repository }}/main_dev
          label-custom: |
            org.opencontainers.image.run_id=${{ github.run_id }}
            org.opencontainers.image.workflow=${{ github.workflow }}
            org.opencontainers.image.run_number=${{ github.run_number }}
          tag-sha: true
      - name: Docker GitHub meta nginx
        id: docker_meta_nginx
        uses: crazy-max/ghaction-docker-meta@v1.11.0
        with:
          images: ghcr.io/${{ github.repository }}/nginx
          label-custom: |
            org.opencontainers.image.run_id=${{ github.run_id }}
            org.opencontainers.image.workflow=${{ github.workflow }}
            org.opencontainers.image.run_number=${{ github.run_number }}
          tag-sha: true
      - name: Build base
        id: build_base
        uses: docker/build-push-action@v2.2.2
        with:
          context: .
          file: ./Build/release/frontend/Dockerfile
          target: base
          push: false
          tags: base
          cache-from: ghcr.io/${{ github.repository }}/base_cache
          cache-to: type=inline
      - name: Build and push main_dev
        id: build_push_main_dev
        uses: docker/build-push-action@v2.2.2
        with:
          context: .
          file: ./Build/release/frontend/Dockerfile
          target: main_dev
          push: true
          tags: ${{ steps.docker_meta_main_dev.outputs.tags }}
          labels: ${{ steps.docker_meta_main_dev.outputs.labels }}
          cache-from: ghcr.io/${{ github.repository }}/base_cache
          build-args: |
            BUILD_NUMBER=${{ env.DOCKER_SHA_TAG }}
            BUILD_DATE=${{ env.BUILD_DATE }}
      - name: Build and push nginx
        id: build_push_nginx
        uses: docker/build-push-action@v2.2.2
        with:
          context: .
          file: ./Build/release/frontend/Dockerfile
          target: nginx
          push: true
          cache-from: ghcr.io/${{ github.repository }}/base_cache
          tags: ${{ steps.docker_meta_nginx.outputs.tags }}
          labels: ${{ steps.docker_meta_nginx.outputs.labels }}

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set BRANCH_NAME (feature)
        shell: bash
        run: echo "CODE_BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
      - name: Check out code
        uses: actions/checkout@v2
        with:
          repository: realfullstack/frontend-infra
          ref: master
          token: ${{ secrets.GITHUBREPO_TOKEN }}
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.8.5"
      - name: Update Kubernetes resources (feature branches)
        if: startsWith(needs.build.outputs.code_env_name, 'feature')
        run: |
          ./bin/create-feature-deployment.sh ${{ env.CODE_BRANCH_NAME }} ${{needs.build.outputs.docker_sha_tag}}
          git add argocd-feature/
          git add kustomize-feature/
      - name: Update Kubernetes resources (main branches)
        if: startsWith(needs.build.outputs.code_env_name, 'feature') != true
        run: |
          cd kustomize/overlays/${{needs.build.outputs.code_env_name}}
          kustomize edit set image frontend_main=ghcr.io/${{ github.repository }}/main_dev:${{needs.build.outputs.docker_sha_tag}}
          kustomize edit set image frontend_nginx=ghcr.io/${{ github.repository }}/nginx:${{needs.build.outputs.docker_sha_tag}}
          cat kustomization.yaml
      - name: Commit files
        run: |
          git config --local user.email "${{ secrets.GITHUBPKG_EMAIL }}"
          git config --local user.name "${{ secrets.GITHUBPKG_NAME }}"
          git commit -am "Bump deployment ${{ github.ref }}"
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          repository: realfullstack/frontend-infra
          github_token: ${{ secrets.GITHUBREPO_TOKEN }}
          branch: master
